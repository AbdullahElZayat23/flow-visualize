const workingHoursCheckingActions=["IsWorking","IsWorkingClearance","IsWorkingIraq","IsWorkingLebanon","IsWorkingB2B","IsWorkingAlfaLabs"];async function drawFlow(){let e;try{var t=await takeUserInput({title:"Enter steps names without a caller to include e.g Templates [optional]",input:"textarea",inputAttributes:{autocapitalize:"off",placeholder:"step name 1\nstep name 2\nstep name 3"},showCancelButton:!0,confirmButtonText:"Continue",allowOutsideClick:!1});if(t.isConfirmed){if(t.value){e=t.value.split("\n"),e=[...new Set(e)];const n=globalThis?.selectedFlow?.steps;var i=e.filter(t=>!n.find(e=>e.name==t));if(i.length)return void await showFeedBack({title:"Rejected",text:`Some of the steps you provided do not exist in the flow, re-check their names. [${i.join(" , ")}]`,icon:"error"})}loader.style.display="block",setTimeout(()=>{renderValidGraph(e),loader.style.display="none",showFeedBack({title:"Success!",text:"Render Success,  "+globalThis.renderTimeText,icon:"success"}),document.querySelector(".nodeExample1:last-of-type")?.scrollIntoView({behavior:"smooth",block:"center"})},500)}}catch(e){showFeedBack({title:"Error",text:"Render Fail",icon:"error"})}}function getValidChildren(s,a){let o=[];return a.forEach((e,i)=>{if(checkValidChild(e,s)){let t={text:{caller:"Caller => "+s.name,...deleteUnwanted(prepareKeyValue(e))}};globalThis.paths[e.name]?.paths||(globalThis.paths[e.name]={paths:[]}),globalThis.paths[e.name].paths.push(s.name);var n=findErrors(e);n?.length&&(t.text.errors="Errors => "+n.join(" , "),t.index=i),globalThis.visitedSteps.has(e.name)?t.HTMLclass="circular_refrence":(globalThis.visitedSteps.add(e.name),t.children=getValidChildren(e,a)),n?.length&&!globalThis.stepsWithErrors?.find(e=>e.text?.name&&e.text?.name==t.text?.name)&&(delete(i=JSON.parse(JSON.stringify(t))).children,globalThis.stepsWithErrors.push(i)),globalThis.visitedSteps.add(e.name),o.push(t)}}),o}function renderValidGraph(e=[]){var t,i,n,s=performance.now(),a=(globalThis.tree&&globalThis.tree.destroy(),globalThis.visitedSteps=new Set,globalThis.stepsWithErrors=[],globalThis.paths={},globalThis?.selectedFlow?.steps);a&&(n=a.find(e=>e.isEntryPoint)||a[0],globalThis.entryPoint=n,globalThis.step={messages:"",interactiveType:"",type:"",action:"",success:"",fail:"",name:"",expected:"",next:"",clarification:"",effect:"",expiry:""},n={...step,...n},t={text:{"flow-name":"Flow Name :- "+globalThis?.selectedFlow.name+" | Total Steps Count:- "+globalThis?.selectedFlow?.steps?.length,...deleteUnwanted(prepareKeyValue(n)),isParent:"parent"},children:[...getValidChildren(n,removeDuplicateSteps(a))]},e.length&&(e=e.reduce((e,t)=>{var i=globalThis.selectedFlow.steps.find(e=>e.name===t);return i&&(e[t]=getValidChildren(i,globalThis.uniqueSteps)),e},{}),(i={text:{name:"Orphaned Children's Parent"},children:[]}).children.push(...flattenRecursively(Object.values(e))),t.children.push(i)),(e=findErrors(n))?.length&&(t.text.errors="Errors => "+e.join(" , "),delete(i=JSON.parse(JSON.stringify(t))).children,globalThis.stepsWithErrors.push(i)),globalThis.stepsWithoutCaller=getStepsWithOutCaller(globalThis.uniqueSteps),globalThis.duplicatedSteps=getStepsWithDuplicatedNames(a),globalThis.allStepsWithErrors=getAllStepsWithErrors(a),(n=getAllStepsWithErrors(globalThis.selectedFlow?.failStep?[{...globalThis?.selectedFlow.failStep,name:"Fail Step"}]:[]))?.length&&globalThis.allStepsWithErrors.push(...n.map(e=>({...e,index:"no-index"}))),e={chart:{container:"#flow-visualize",connectors:{type:"bCurve",style:{"arrow-end":"classic-wide-long","stroke-width":2,stroke:"#665B57"}},node:{HTMLclass:"nodeExample1"},maxDepth:1e4},nodeStructure:{...t}},globalThis.tree=new Treant(e),splitText(".node-expected"),splitText(".node-clarification","<br><br>"),splitText(".node-messages","<br><br>"),updateValues(),$(function(){let n=0;$(".nodeExample1").resizable({resize:function(e,t){var i;t.size.height=$(this).height(),t.size.width=30*Math.round(t.size.width/30),t.size.width>n?(i=Math.max(12-(t.size.width-n)/30,8),$(this).css({width:t.size.width+"px",height:t.size.height+"px",fontSize:i+"px"})):$(this).css({width:t.size.width+"px",height:t.size.height+"px",fontSize:"12px"}),n=t.size.width}})}),i=((performance.now()-s)/1e3).toFixed(2),a=Math.floor(i/60),n=(i%60).toFixed(2),globalThis.renderTimeText=`Render time: ${a} minutes and ${n} seconds`)}function checkValidChild(e,t){return!!e.name&&(!(![t.success,t.fail].includes(e.name)||!["action","time"].includes(t.type))||t.expiry?.step==e.name||t.next==e.name&&"break"==t.type||!(!checkExpected(t.expected,e.name)||!["message","failover","reminder"].includes(t.type)))}async function drawWorkingHoursFlow(){let t=[],i=globalThis.uniqueSteps;var n=await takeUserInput({title:"Enter steps names without a caller to include e.g Templates [optional]",input:"textarea",inputAttributes:{autocapitalize:"off",placeholder:"step name 1\nstep name 2\nstep name 3\n..."},showCancelButton:!0,confirmButtonText:"Continue",allowOutsideClick:!1});if(n.isConfirmed){if(n.value){t=n.value.split("\n");n=(t=[...new Set(t)]).filter(t=>!i.find(e=>e.name==t));if(n.length)return void await showFeedBack({title:"Rejected",text:`Some of the steps you provided do not exist in the flow, re-check their names. [${n.join(" , ")}]`,icon:"error"})}let e=await askForActionNames();if(void 0!==e){e=e.length?e.split("\n"):[];n=extractWorkingHoursCheckers(i,e);if(n.length){var s=await setWorkingHoursActionsResultsDirection(n,i),a=[],o=[],r=i.find(e=>e.isEntryPoint)||i[0],n=(globalThis.workingTracePaths={},globalThis.visitedInWorkingTraceSteps=new Set,globalThis.visitedOutOfWorkingTraceSteps=new Set,await takeUserInput({title:"Select inital direction [optional]",input:"select",inputOptions:{inWorking:"In working",outOfWorking:"Out of working"},inputPlaceholder:"",cancelButtonText:"Skip"}));switch(n.value){case"inWorking":pushObjIfNotExists(a,r,"name");break;case"outOfWorking":pushObjIfNotExists(o,r,"name");break;default:pushObjIfNotExists(a,r,"name"),pushObjIfNotExists(o,r,"name")}if(getValidChildrensBasedOnWorkinghours(r,i,a,o,n.value,s),t.length)for(const c of t)getValidChildrensBasedOnWorkinghours(i.find(e=>e.name===c),i,a,o,null,s);var n=intersectionByName(a,o),{pureInSteps:l,pureOutSteps:h}=findPureWorkingSteps(a,o,n);exportFlow({inWorkingSteps:a,outOfWorkingSteps:o,inAndOutIntersection:n,pureInSteps:l,pureOutSteps:h,name:"in-out-workingStepsDirections"})}else showFeedBack({title:"Rejected",text:"No working hours checking steps are found, e.g time steps or action steps that checks the working hours",icon:"error"})}}}function extractWorkingHoursCheckers(e=[],t=[]){let i=new Set;return workingHoursCheckingActions.push(...t),e.filter(e=>{["action"].includes(e.type)&&workingHoursCheckingActions.includes(e.action)&&i.add(e.name),["time"].includes(e.type)&&i.add(e.name)}),Array.from(i)}async function askForActionNames(){var e={title:"Actions Names",text:`U will be prompted to enter extra actions names that checks the working hours, Currently stored names are [${workingHoursCheckingActions.join("-")}]`,icon:"info"};await showFeedBack(e);return(await takeUserInput({title:"Enter EXTRA actions names that are used to check the working hours, leave empty if there is none",input:"textarea",inputAttributes:{autocapitalize:"off",placeholder:"action name 1\naction name 2\naction name 3\n..."},showCancelButton:!0,confirmButtonText:"Continue",allowOutsideClick:!1})).value}async function setWorkingHoursActionsResultsDirection(e,t){var i={};for(const a of e){var n=t.find(e=>e.name==a),s=await takeUserInput({icon:"question",title:"Set step direction",text:`Which direction describes the "in working hours" in this step [${a}], Type [${n.type}],Action [${n.action||("time"==n.type?"checkValidTime":"")}],Success [${n.success}], Fail [${n.fail}]`,showDenyButton:!0,showCancelButton:!1,confirmButtonText:"Success",denyButtonText:"Fail"});s.isConfirmed?i[a]={in:n.success,out:n.fail}:s.isDenied&&(i[a]={in:n.fail,out:n.success})}return i}function getValidChildrensBasedOnWorkinghours(i,n,s,a,o,r){n.forEach((e,t)=>{checkValidChild(e,i)&&(e=e,globalThis.workingTracePaths[e.name]?.paths||(globalThis.workingTracePaths[e.name]={paths:[]}),globalThis.workingTracePaths[e.name].paths.push(i.name),r[i.name]?.in==e.name?(o="inWorking",pushObjIfNotExists(s,e,"name")):r[i.name]?.out==e.name?(o="outOfWorking",pushObjIfNotExists(a,e,"name")):("inWorking"==o&&pushObjIfNotExists(s,e,"name"),"outOfWorking"==o&&pushObjIfNotExists(a,e,"name"),o||(pushObjIfNotExists(s,e,"name"),pushObjIfNotExists(a,e,"name"))),"inWorking"!=o||globalThis.visitedInWorkingTraceSteps.has(e.name)?"outOfWorking"!=o||globalThis.visitedOutOfWorkingTraceSteps.has(e.name)?o||globalThis.visitedInWorkingTraceSteps.has(e.name)||globalThis.visitedOutOfWorkingTraceSteps.has(e.name)||(globalThis.visitedInWorkingTraceSteps.add(e.name),globalThis.visitedOutOfWorkingTraceSteps.add(e.name),getValidChildrensBasedOnWorkinghours(e,n,s,a,o,r)):(globalThis.visitedOutOfWorkingTraceSteps.add(e.name),getValidChildrensBasedOnWorkinghours(e,n,s,a,o,r)):(globalThis.visitedInWorkingTraceSteps.add(e.name),getValidChildrensBasedOnWorkinghours(e,n,s,a,o,r)))})}function pushObjIfNotExists(e,t,i){e.find(e=>e[i]==t[i])||e.push(t)}