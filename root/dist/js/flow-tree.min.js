function virhivKvetl(){var e,t,i=performance.now(),s=(globalThis.tree&&globalThis.tree.destroy(),globalThis.visitedSteps=new Set,globalThis.stepsWithErrors=[],globalThis?.selectedFlow?.steps);s&&(t=s.find(e=>e.isEntryPoint)||s[0],globalThis.entryPoint=t,globalThis.step={messages:"",interactiveType:"",type:"",action:"",success:"",fail:"",name:"",expected:"",next:"",clarification:"",effect:"",expiry:""},t={...step,...t},e={text:{"flow-name":"Flow Name :- "+globalThis?.selectedFlow.name+" | Total Steps Count:- "+globalThis?.selectedFlow?.steps?.length,...deleteUnwanted(prepareKeyValue(t)),isParent:"parent"},children:[...kixGlmphvir(t,viqsziHytpmgexiWxitw(s))]},(t=jmrhIvvsvw(t))?.length&&(e.text.errors="Errors => "+t.join(" , "),delete(t=JSON.parse(JSON.stringify(e))).children,globalThis.stepsWithErrors.push(t)),globalThis.stepsWithoutCaller=kixWxitwAmxlSyxGeppiv(globalThis.uniqueSteps),globalThis.duplicatedSteps=kixWxitwAmxlHytpmgexihReqiw(s),globalThis.allStepsWithErrors=kixEppWxitwAmxlIvvsvw(s),t={chart:{container:"#flow-visualize",connectors:{type:"bCurve",style:{"arrow-end":"classic-wide-long","stroke-width":2,stroke:"#665B57"}},node:{HTMLclass:"nodeExample1"},maxDepth:1e4},nodeStructure:{...e}},globalThis.tree=new Treant(t),document.querySelector(".nodeExample1:last-of-type")?.scrollIntoView({behavior:"smooth",block:"center"}),splitText(".node-expected"),splitText(".node-clarification","<br><br>"),splitText(".node-messages","<br><br>"),updateValues(),$(function(){let s=0;$(".nodeExample1").resizable({resize:function(e,t){var i;t.size.height=$(this).height(),t.size.width=30*Math.round(t.size.width/30),t.size.width>s?(i=Math.max(12-(t.size.width-s)/30,8),$(this).css({width:t.size.width+"px",height:t.size.height+"px",fontSize:i+"px"})):$(this).css({width:t.size.width+"px",height:t.size.height+"px",fontSize:"12px"}),s=t.size.width}})}),s=((performance.now()-i)/1e3).toFixed(2),e=Math.floor(s/60),t=(s%60).toFixed(2),globalThis.renderTimeText=`Render time: ${e} minutes and ${t} seconds`)}globalThis.stepsWithErrors=[],globalThis.allStepsWithErrors=[],globalThis.stepsWithoutCaller=[],globalThis.duplicatedSteps=[],globalThis.flowToExtract={steps:[]},globalThis.flowToExtractVisitedSteps=new Set,globalThis.entryPoint;